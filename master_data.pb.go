// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master_data.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VertexSlaveRegistry struct {
	Registry             map[uint32]string `protobuf:"bytes,1,rep,name=registry,proto3" json:"registry,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VertexSlaveRegistry) Reset()         { *m = VertexSlaveRegistry{} }
func (m *VertexSlaveRegistry) String() string { return proto.CompactTextString(m) }
func (*VertexSlaveRegistry) ProtoMessage()    {}
func (*VertexSlaveRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba343a99112eefe2, []int{0}
}

func (m *VertexSlaveRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VertexSlaveRegistry.Unmarshal(m, b)
}
func (m *VertexSlaveRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VertexSlaveRegistry.Marshal(b, m, deterministic)
}
func (m *VertexSlaveRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VertexSlaveRegistry.Merge(m, src)
}
func (m *VertexSlaveRegistry) XXX_Size() int {
	return xxx_messageInfo_VertexSlaveRegistry.Size(m)
}
func (m *VertexSlaveRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_VertexSlaveRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_VertexSlaveRegistry proto.InternalMessageInfo

func (m *VertexSlaveRegistry) GetRegistry() map[uint32]string {
	if m != nil {
		return m.Registry
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba343a99112eefe2, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*VertexSlaveRegistry)(nil), "main.VertexSlaveRegistry")
	proto.RegisterMapType((map[uint32]string)(nil), "main.VertexSlaveRegistry.RegistryEntry")
	proto.RegisterType((*Empty)(nil), "main.Empty")
}

func init() { proto.RegisterFile("master_data.proto", fileDescriptor_ba343a99112eefe2) }

var fileDescriptor_ba343a99112eefe2 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4d, 0x2c, 0x2e,
	0x49, 0x2d, 0x8a, 0x4f, 0x49, 0x2c, 0x49, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9,
	0x4d, 0xcc, 0xcc, 0x53, 0x9a, 0xce, 0xc8, 0x25, 0x1c, 0x96, 0x5a, 0x54, 0x92, 0x5a, 0x11, 0x9c,
	0x93, 0x58, 0x96, 0x1a, 0x94, 0x9a, 0x9e, 0x59, 0x5c, 0x52, 0x54, 0x29, 0xe4, 0xcc, 0xc5, 0x51,
	0x04, 0x65, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0xa9, 0xeb, 0x81, 0x34, 0xe8, 0x61, 0x51,
	0xac, 0x07, 0x63, 0xb8, 0xe6, 0x95, 0x14, 0x55, 0x06, 0xc1, 0x35, 0x4a, 0x59, 0x73, 0xf1, 0xa2,
	0x48, 0x09, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x82, 0x0c, 0x64, 0xd4, 0xe0, 0x0d, 0x02, 0x31, 0x85,
	0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x20,
	0x1c, 0x2b, 0x26, 0x0b, 0x46, 0x25, 0x76, 0x2e, 0x56, 0xd7, 0xdc, 0x82, 0x92, 0x4a, 0x23, 0x1f,
	0x2e, 0x36, 0x5f, 0xb0, 0xeb, 0x85, 0x9c, 0xb8, 0xc4, 0xdc, 0x53, 0x4b, 0xb0, 0x39, 0x97, 0x1b,
	0xe2, 0x38, 0xb0, 0x06, 0x29, 0x49, 0x9c, 0x2e, 0x55, 0x62, 0x48, 0x62, 0x03, 0xfb, 0xde, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x5c, 0x2b, 0xca, 0x12, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	GetVertexSlaveRegistry(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VertexSlaveRegistry, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) GetVertexSlaveRegistry(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VertexSlaveRegistry, error) {
	out := new(VertexSlaveRegistry)
	err := c.cc.Invoke(ctx, "/main.Master/GetVertexSlaveRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	GetVertexSlaveRegistry(context.Context, *Empty) (*VertexSlaveRegistry, error)
}

// UnimplementedMasterServer can be embedded to have forward compatible implementations.
type UnimplementedMasterServer struct {
}

func (*UnimplementedMasterServer) GetVertexSlaveRegistry(ctx context.Context, req *Empty) (*VertexSlaveRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVertexSlaveRegistry not implemented")
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_GetVertexSlaveRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).GetVertexSlaveRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Master/GetVertexSlaveRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).GetVertexSlaveRegistry(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVertexSlaveRegistry",
			Handler:    _Master_GetVertexSlaveRegistry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master_data.proto",
}
